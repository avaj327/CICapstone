const mongoose = require('mongoose'); //mongodb interface
const connectionString = 'mongodb://0.0.0.0:27017/USAJobs'; //TODO: update url with remote server
const jsonArray = require('./output.json'); //output file generated by test.js



async function connect() {
	await mongoose.connect(connectionString, {})
		.then(db => console.log('Connected with MongoDB.'))
		.catch(err => console.log(`Unable to connect with MongoDB: ${err.message}`));



	const locationSchema = mongoose.Schema({
		LocationName: String,
		CountryCode: String,
		CountrySubDivisionCode: String,
		CityName: String,
		Longitude: Number,
		Latitude: Number
	});


	const searchResultSchema = mongoose.Schema({
		MatchedObjectId: String,
		MatchedObjectDescriptor: {
			PositionID: String,
			PositionTitle: String,
			PositionURI: String,
			ApplyURI: [String],
			PositionLocationDisplay: String,
			PositionLocation: [locationSchema],
			OrganizationName: String,
			DepartmentName: String,
			JobCategory: [{
				Name: String,
				Code: String
			}],
			JobGrade: [{
				Code: String
			}],
			PositionSchedule: [{
				Name: String,
				Code: String
			}],
			PositionOfferingType: [{
				Name: String,
				Code: String
			}],
			QualificationSummary: String,
			PositionRumeration: [{
				MinimumRange: String,
				MaximumRange: String,
				RateIntervalCode: String,
				Description: String
			}],
			PositionStartDate: Date,
			PositionEndDate: Date,
			PublicationStartDate: Date,
			ApplicationCloseDate: Date,
			PositionFormattedDescription: [{
				Label: String,
				LabelDescription: String
			}],
			UserArea: {
				Details: {
					JobSummary: String,
					WhoMayApply: {
						Name: String,
						Code: String
					},
					LowGrade: String,
					HighGrade: String,
					PromotionPotential: String,
					HiringPath: [String],
					TotalOpenings: String,
					AgencyMarketingStatement: String,
					TravelCode: String,
					ApplyOnlineUrl: String,
					DetailStatusUrl: String
				},
				IsRadialSearch: Boolean
			}
		},
		RelevanceRank: Number
	});

	const jobSchema = mongoose.Schema({
		LanguageCode: String,
		SearchParameters: Array,
		SearchResult: {
			SearchResultCount: Number,
			SearchResultCountAll: Number,
			SearchResultItems: [searchResultSchema],
			UserArea: {
				NumberOfPages: String,
				IsRadialSearch: Boolean
			}
		}
	});


	const Model = mongoose.model("USAJobs", jobSchema);
	await Model.collection.drop();
	await Model.insertMany(jsonArray);

	mongoose.connection.close();
}

connect();